// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// A poll
/// See <a href="https://corefork.telegram.org/constructor/inputMediaPoll" />
///</summary>
[TlObject(0xf94e5f1)]
public sealed class TInputMediaPoll : IInputMedia
{
    public uint ConstructorId => 0xf94e5f1;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// The poll to send
    /// See <a href="https://corefork.telegram.org/type/Poll" />
    ///</summary>
    public MyTelegram.Schema.IPoll Poll { get; set; }

    ///<summary>
    /// Correct answer IDs (for quiz polls)
    ///</summary>
    public TVector<string>? CorrectAnswers { get; set; }

    ///<summary>
    /// Explanation of quiz solution
    ///</summary>
    public string? Solution { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a>
    ///</summary>
    public TVector<MyTelegram.Schema.IMessageEntity>? SolutionEntities { get; set; }

    public void ComputeFlag()
    {
        if (CorrectAnswers?.Count > 0) { Flags[0] = true; }
        if (Solution != null) { Flags[1] = true; }
        if (SolutionEntities?.Count > 0) { Flags[1] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Poll);
        if (Flags[0]) { writer.Write(CorrectAnswers); }
        if (Flags[1]) { writer.Write(Solution); }
        if (Flags[1]) { writer.Write(SolutionEntities); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        Poll = reader.Read<MyTelegram.Schema.IPoll>();
        if (Flags[0]) { CorrectAnswers = reader.Read<TVector<string>>(); }
        if (Flags[1]) { Solution = reader.ReadString(); }
        if (Flags[1]) { SolutionEntities = reader.Read<TVector<MyTelegram.Schema.IMessageEntity>>(); }
    }
}