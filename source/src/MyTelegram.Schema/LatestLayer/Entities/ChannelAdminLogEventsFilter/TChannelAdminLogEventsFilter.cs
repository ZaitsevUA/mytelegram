// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Filter only certain admin log events
/// See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventsFilter" />
///</summary>
[TlObject(0xea107ae4)]
public sealed class TChannelAdminLogEventsFilter : IChannelAdminLogEventsFilter
{
    public uint ConstructorId => 0xea107ae4;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantJoin">Join events</a>, including <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantJoinByInvite">joins using invite links</a> and <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantJoinByRequest">join requests</a>.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Join { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantLeave">Leave events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Leave { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantInvite">Invite events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Invite { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantToggleBan">Ban events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Ban { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantToggleBan">Unban events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Unban { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantToggleBan">Kick events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Kick { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantToggleBan">Unkick events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Unkick { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantToggleAdmin">Admin promotion events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Promote { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantToggleAdmin">Admin demotion events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Demote { get; set; }

    ///<summary>
    /// Info change events (when <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeAbout">about</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeLinkedChat">linked chat</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeLocation">location</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangePhoto">photo</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeStickerSet">stickerset</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeTitle">title</a> or <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeUsername">username</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleSlowMode">slowmode</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeHistoryTTL">history TTL</a> settings of a channel gets modified)
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Info { get; set; }

    ///<summary>
    /// Settings change events (<a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleInvites">invites</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionTogglePreHistoryHidden">hidden prehistory</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleSignatures">signatures</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionDefaultBannedRights">default banned rights</a>, <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleForum">forum toggle events</a>)
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Settings { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionUpdatePinned">Message pin events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Pinned { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionEditMessage">Message edit events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Edit { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionDeleteMessage">Message deletion events</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Delete { get; set; }

    ///<summary>
    /// Group call events
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool GroupCall { get; set; }

    ///<summary>
    /// Invite events
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Invites { get; set; }

    ///<summary>
    /// A message was posted in a channel
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Send { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/api/forum">Forum</a>-related events
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Forums { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantSubExtend">Telegram Star subscription extension events »</a>
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool SubExtend { get; set; }

    public void ComputeFlag()
    {
        if (Join) { Flags[0] = true; }
        if (Leave) { Flags[1] = true; }
        if (Invite) { Flags[2] = true; }
        if (Ban) { Flags[3] = true; }
        if (Unban) { Flags[4] = true; }
        if (Kick) { Flags[5] = true; }
        if (Unkick) { Flags[6] = true; }
        if (Promote) { Flags[7] = true; }
        if (Demote) { Flags[8] = true; }
        if (Info) { Flags[9] = true; }
        if (Settings) { Flags[10] = true; }
        if (Pinned) { Flags[11] = true; }
        if (Edit) { Flags[12] = true; }
        if (Delete) { Flags[13] = true; }
        if (GroupCall) { Flags[14] = true; }
        if (Invites) { Flags[15] = true; }
        if (Send) { Flags[16] = true; }
        if (Forums) { Flags[17] = true; }
        if (SubExtend) { Flags[18] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);

    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { Join = true; }
        if (Flags[1]) { Leave = true; }
        if (Flags[2]) { Invite = true; }
        if (Flags[3]) { Ban = true; }
        if (Flags[4]) { Unban = true; }
        if (Flags[5]) { Kick = true; }
        if (Flags[6]) { Unkick = true; }
        if (Flags[7]) { Promote = true; }
        if (Flags[8]) { Demote = true; }
        if (Flags[9]) { Info = true; }
        if (Flags[10]) { Settings = true; }
        if (Flags[11]) { Pinned = true; }
        if (Flags[12]) { Edit = true; }
        if (Flags[13]) { Delete = true; }
        if (Flags[14]) { GroupCall = true; }
        if (Flags[15]) { Invites = true; }
        if (Flags[16]) { Send = true; }
        if (Flags[17]) { Forums = true; }
        if (Flags[18]) { SubExtend = true; }
    }
}