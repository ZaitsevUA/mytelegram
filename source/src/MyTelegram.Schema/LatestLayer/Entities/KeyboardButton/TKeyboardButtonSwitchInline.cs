// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Button to force a user to switch to inline mode: pressing the button will prompt the user to select one of their chats, open that chat and insert the bot's username and the specified inline query in the input field.
/// See <a href="https://corefork.telegram.org/constructor/keyboardButtonSwitchInline" />
///</summary>
[TlObject(0x93b9fbb5)]
public sealed class TKeyboardButtonSwitchInline : IKeyboardButton
{
    public uint ConstructorId => 0x93b9fbb5;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// If set, pressing the button will insert the bot's username and the specified inline <code>query</code> in the current chat's input field.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool SamePeer { get; set; }

    ///<summary>
    /// Button label
    ///</summary>
    public string Text { get; set; }

    ///<summary>
    /// The inline query to use
    ///</summary>
    public string Query { get; set; }

    ///<summary>
    /// Filter to use when selecting chats.
    ///</summary>
    public TVector<MyTelegram.Schema.IInlineQueryPeerType>? PeerTypes { get; set; }

    public void ComputeFlag()
    {
        if (SamePeer) { Flags[0] = true; }
        if (PeerTypes?.Count > 0) { Flags[1] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Text);
        writer.Write(Query);
        if (Flags[1]) { writer.Write(PeerTypes); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { SamePeer = true; }
        Text = reader.ReadString();
        Query = reader.ReadString();
        if (Flags[1]) { PeerTypes = reader.Read<TVector<MyTelegram.Schema.IInlineQueryPeerType>>(); }
    }
}