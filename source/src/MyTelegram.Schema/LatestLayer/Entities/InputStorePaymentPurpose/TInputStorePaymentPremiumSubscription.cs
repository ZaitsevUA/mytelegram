// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Info about a Telegram Premium purchase
/// See <a href="https://corefork.telegram.org/constructor/inputStorePaymentPremiumSubscription" />
///</summary>
[TlObject(0xa6751e66)]
public sealed class TInputStorePaymentPremiumSubscription : IInputStorePaymentPurpose
{
    public uint ConstructorId => 0xa6751e66;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Pass true if this is a restore of a Telegram Premium purchase; only for the App Store
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Restore { get; set; }

    ///<summary>
    /// Pass true if this is an upgrade from a monthly subscription to a yearly subscription; only for App Store
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Upgrade { get; set; }

    public void ComputeFlag()
    {
        if (Restore) { Flags[0] = true; }
        if (Upgrade) { Flags[1] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);

    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { Restore = true; }
        if (Flags[1]) { Upgrade = true; }
    }
}