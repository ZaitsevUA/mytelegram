// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Initialize connection
/// <para>Possible errors</para>
/// Code Type Description
/// 400 CONNECTION_LAYER_INVALID Layer invalid.
/// See <a href="https://corefork.telegram.org/method/initConnection" />
///</summary>
[TlObject(0xc1cd5ea9)]
public sealed class RequestInitConnection : IRequest<IObject>, IHasSubQuery
{
    public uint ConstructorId => 0xc1cd5ea9;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Application identifier (see. <a href="https://corefork.telegram.org/myapp">App configuration</a>)
    ///</summary>
    public int ApiId { get; set; }

    ///<summary>
    /// Device model
    ///</summary>
    public string DeviceModel { get; set; }

    ///<summary>
    /// Operation system version
    ///</summary>
    public string SystemVersion { get; set; }

    ///<summary>
    /// Application version
    ///</summary>
    public string AppVersion { get; set; }

    ///<summary>
    /// Code for the language used on the device's OS, ISO 639-1 standard
    ///</summary>
    public string SystemLangCode { get; set; }

    ///<summary>
    /// Platform identifier (i.e. <code>android</code>, <code>tdesktop</code>, etc).
    ///</summary>
    public string LangPack { get; set; }

    ///<summary>
    /// Either an ISO 639-1 language code or a language pack name obtained from a <a href="https://corefork.telegram.org/api/links#language-pack-links">language pack link</a>.
    ///</summary>
    public string LangCode { get; set; }

    ///<summary>
    /// Info about an MTProto proxy
    /// See <a href="https://corefork.telegram.org/type/InputClientProxy" />
    ///</summary>
    public MyTelegram.Schema.IInputClientProxy? Proxy { get; set; }

    ///<summary>
    /// Additional initConnection parameters. <br>For now, only the <code>tz_offset</code> field is supported, for specifying the timezone offset in seconds.
    /// See <a href="https://corefork.telegram.org/type/JSONValue" />
    ///</summary>
    public MyTelegram.Schema.IJSONValue? Params { get; set; }

    ///<summary>
    /// The query itself
    ///</summary>
    public IObject Query { get; set; }

    public void ComputeFlag()
    {
        if (Proxy != null) { Flags[0] = true; }
        if (Params != null) { Flags[1] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(ApiId);
        writer.Write(DeviceModel);
        writer.Write(SystemVersion);
        writer.Write(AppVersion);
        writer.Write(SystemLangCode);
        writer.Write(LangPack);
        writer.Write(LangCode);
        if (Flags[0]) { writer.Write(Proxy); }
        if (Flags[1]) { writer.Write(Params); }
        writer.Write(Query);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        ApiId = reader.ReadInt32();
        DeviceModel = reader.ReadString();
        SystemVersion = reader.ReadString();
        AppVersion = reader.ReadString();
        SystemLangCode = reader.ReadString();
        LangPack = reader.ReadString();
        LangCode = reader.ReadString();
        if (Flags[0]) { Proxy = reader.Read<MyTelegram.Schema.IInputClientProxy>(); }
        if (Flags[1]) { Params = reader.Read<MyTelegram.Schema.IJSONValue>(); }
        Query = reader.Read<IObject>();
    }
}
