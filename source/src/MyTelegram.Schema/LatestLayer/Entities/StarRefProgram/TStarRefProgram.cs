// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// See <a href="https://corefork.telegram.org/constructor/starRefProgram" />
///</summary>
[TlObject(0xdd0c66f2)]
public sealed class TStarRefProgram : IStarRefProgram
{
    public uint ConstructorId => 0xdd0c66f2;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// &nbsp;
    ///</summary>
    public long BotId { get; set; }

    ///<summary>
    /// &nbsp;
    ///</summary>
    public int CommissionPermille { get; set; }

    ///<summary>
    /// &nbsp;
    ///</summary>
    public int? DurationMonths { get; set; }

    ///<summary>
    /// &nbsp;
    ///</summary>
    public int? EndDate { get; set; }

    ///<summary>
    /// &nbsp;
    /// See <a href="https://corefork.telegram.org/type/StarsAmount" />
    ///</summary>
    public MyTelegram.Schema.IStarsAmount? DailyRevenuePerUser { get; set; }

    public void ComputeFlag()
    {
        if (/*DurationMonths != 0 && */DurationMonths.HasValue) { Flags[0] = true; }
        if (/*EndDate != 0 && */EndDate.HasValue) { Flags[1] = true; }
        if (DailyRevenuePerUser != null) { Flags[2] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(BotId);
        writer.Write(CommissionPermille);
        if (Flags[0]) { writer.Write(DurationMonths.Value); }
        if (Flags[1]) { writer.Write(EndDate.Value); }
        if (Flags[2]) { writer.Write(DailyRevenuePerUser); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        BotId = reader.ReadInt64();
        CommissionPermille = reader.ReadInt32();
        if (Flags[0]) { DurationMonths = reader.ReadInt32(); }
        if (Flags[1]) { EndDate = reader.ReadInt32(); }
        if (Flags[2]) { DailyRevenuePerUser = reader.Read<MyTelegram.Schema.IStarsAmount>(); }
    }
}