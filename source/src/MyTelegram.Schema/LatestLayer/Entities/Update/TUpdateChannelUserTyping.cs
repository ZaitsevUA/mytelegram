// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// A user is typing in a <a href="https://corefork.telegram.org/api/channel">supergroup, channel</a> or <a href="https://corefork.telegram.org/api/threads">message thread</a>
/// See <a href="https://corefork.telegram.org/constructor/updateChannelUserTyping" />
///</summary>
[TlObject(0x8c88c923)]
public sealed class TUpdateChannelUserTyping : IUpdate
{
    public uint ConstructorId => 0x8c88c923;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Channel ID
    ///</summary>
    public long ChannelId { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/api/threads">Thread ID</a>
    ///</summary>
    public int? TopMsgId { get; set; }

    ///<summary>
    /// The peer that is typing
    /// See <a href="https://corefork.telegram.org/type/Peer" />
    ///</summary>
    public MyTelegram.Schema.IPeer FromId { get; set; }

    ///<summary>
    /// Whether the user is typing, sending a media or doing something else
    /// See <a href="https://corefork.telegram.org/type/SendMessageAction" />
    ///</summary>
    public MyTelegram.Schema.ISendMessageAction Action { get; set; }

    public void ComputeFlag()
    {
        if (/*TopMsgId != 0 && */TopMsgId.HasValue) { Flags[0] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(ChannelId);
        if (Flags[0]) { writer.Write(TopMsgId.Value); }
        writer.Write(FromId);
        writer.Write(Action);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        ChannelId = reader.ReadInt64();
        if (Flags[0]) { TopMsgId = reader.ReadInt32(); }
        FromId = reader.Read<MyTelegram.Schema.IPeer>();
        Action = reader.Read<MyTelegram.Schema.ISendMessageAction>();
    }
}