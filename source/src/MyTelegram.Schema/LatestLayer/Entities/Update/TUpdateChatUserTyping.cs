// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// The user is preparing a message in a group; typing, recording, uploading, etc. This update is valid for 6 seconds. If no further updates of this kind are received after 6 seconds, it should be considered that the user stopped doing whatever they were doing
/// See <a href="https://corefork.telegram.org/constructor/updateChatUserTyping" />
///</summary>
[TlObject(0x83487af0)]
public sealed class TUpdateChatUserTyping : IUpdate
{
    public uint ConstructorId => 0x83487af0;
    ///<summary>
    /// Group id
    ///</summary>
    public long ChatId { get; set; }

    ///<summary>
    /// Peer that started typing (can be the chat itself, in case of anonymous admins).
    /// See <a href="https://corefork.telegram.org/type/Peer" />
    ///</summary>
    public MyTelegram.Schema.IPeer FromId { get; set; }

    ///<summary>
    /// Type of action
    /// See <a href="https://corefork.telegram.org/type/SendMessageAction" />
    ///</summary>
    public MyTelegram.Schema.ISendMessageAction Action { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(ChatId);
        writer.Write(FromId);
        writer.Write(Action);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        ChatId = reader.ReadInt64();
        FromId = reader.Read<MyTelegram.Schema.IPeer>();
        Action = reader.Read<MyTelegram.Schema.ISendMessageAction>();
    }
}