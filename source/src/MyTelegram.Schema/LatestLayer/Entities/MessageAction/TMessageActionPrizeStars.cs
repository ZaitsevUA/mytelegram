// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// You won some <a href="https://corefork.telegram.org/api/stars">Telegram Stars</a> in a <a href="https://corefork.telegram.org/api/giveaways#star-giveaways">Telegram Star giveaway »</a>.
/// See <a href="https://corefork.telegram.org/constructor/messageActionPrizeStars" />
///</summary>
[TlObject(0xb00c47a2)]
public sealed class TMessageActionPrizeStars : IMessageAction
{
    public uint ConstructorId => 0xb00c47a2;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// If set, this indicates the reverse transaction that refunds the remaining stars to the creator of a giveaway if, when the giveaway ends, the number of members in the channel is smaller than the number of winners in the giveaway.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Unclaimed { get; set; }

    ///<summary>
    /// The number of Telegram Stars you won
    ///</summary>
    public long Stars { get; set; }

    ///<summary>
    /// ID of the telegram star transaction.
    ///</summary>
    public string TransactionId { get; set; }

    ///<summary>
    /// Identifier of the peer that was automatically boosted by the winners of the giveaway.
    /// See <a href="https://corefork.telegram.org/type/Peer" />
    ///</summary>
    public MyTelegram.Schema.IPeer BoostPeer { get; set; }

    ///<summary>
    /// ID of the message containing the <a href="https://corefork.telegram.org/constructor/messageMediaGiveaway">messageMediaGiveaway</a>
    ///</summary>
    public int GiveawayMsgId { get; set; }

    public void ComputeFlag()
    {
        if (Unclaimed) { Flags[0] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Stars);
        writer.Write(TransactionId);
        writer.Write(BoostPeer);
        writer.Write(GiveawayMsgId);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { Unclaimed = true; }
        Stars = reader.ReadInt64();
        TransactionId = reader.ReadString();
        BoostPeer = reader.Read<MyTelegram.Schema.IPeer>();
        GiveawayMsgId = reader.ReadInt32();
    }
}