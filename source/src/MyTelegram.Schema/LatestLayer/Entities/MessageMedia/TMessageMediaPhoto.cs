// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Attached photo.
/// See <a href="https://corefork.telegram.org/constructor/messageMediaPhoto" />
///</summary>
[TlObject(0x695150d7)]
public sealed class TMessageMediaPhoto : IMessageMedia
{
    public uint ConstructorId => 0x695150d7;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Whether this media should be hidden behind a spoiler warning
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Spoiler { get; set; }

    ///<summary>
    /// Photo
    /// See <a href="https://corefork.telegram.org/type/Photo" />
    ///</summary>
    public MyTelegram.Schema.IPhoto? Photo { get; set; }

    ///<summary>
    /// Time to live in seconds of self-destructing photo
    ///</summary>
    public int? TtlSeconds { get; set; }

    public void ComputeFlag()
    {
        if (Spoiler) { Flags[3] = true; }
        if (Photo != null) { Flags[0] = true; }
        if (/*TtlSeconds != 0 && */TtlSeconds.HasValue) { Flags[2] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        if (Flags[0]) { writer.Write(Photo); }
        if (Flags[2]) { writer.Write(TtlSeconds.Value); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[3]) { Spoiler = true; }
        if (Flags[0]) { Photo = reader.Read<MyTelegram.Schema.IPhoto>(); }
        if (Flags[2]) { TtlSeconds = reader.ReadInt32(); }
    }
}