// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Stories;

///<summary>
/// Get the <a href="https://corefork.telegram.org/api/reactions">reaction</a> and interaction list of a <a href="https://corefork.telegram.org/api/stories">story</a> posted to a channel, along with the sender of each reaction.Can only be used by channel admins.
/// <para>Possible errors</para>
/// Code Type Description
/// 400 PEER_ID_INVALID The provided peer id is invalid.
/// See <a href="https://corefork.telegram.org/method/stories.getStoryReactionsList" />
///</summary>
[TlObject(0xb9b2881f)]
public sealed class RequestGetStoryReactionsList : IRequest<MyTelegram.Schema.Stories.IStoryReactionsList>
{
    public uint ConstructorId => 0xb9b2881f;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// If set, returns forwards and reposts first, then reactions, then other views; otherwise returns interactions sorted just by interaction date.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool ForwardsFirst { get; set; }

    ///<summary>
    /// Channel
    /// See <a href="https://corefork.telegram.org/type/InputPeer" />
    ///</summary>
    public MyTelegram.Schema.IInputPeer Peer { get; set; }

    ///<summary>
    /// <a href="https://corefork.telegram.org/api/stories">Story</a> ID
    ///</summary>
    public int Id { get; set; }

    ///<summary>
    /// Get only reactions of this type
    /// See <a href="https://corefork.telegram.org/type/Reaction" />
    ///</summary>
    public MyTelegram.Schema.IReaction? Reaction { get; set; }

    ///<summary>
    /// Offset for pagination (taken from the <code>next_offset</code> field of the returned <a href="https://corefork.telegram.org/type/stories.StoryReactionsList">stories.StoryReactionsList</a>); empty in the first request.
    ///</summary>
    public string? Offset { get; set; }

    ///<summary>
    /// Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a>
    ///</summary>
    public int Limit { get; set; }

    public void ComputeFlag()
    {
        if (ForwardsFirst) { Flags[2] = true; }
        if (Reaction != null) { Flags[0] = true; }
        if (Offset != null) { Flags[1] = true; }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Peer);
        writer.Write(Id);
        if (Flags[0]) { writer.Write(Reaction); }
        if (Flags[1]) { writer.Write(Offset); }
        writer.Write(Limit);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[2]) { ForwardsFirst = true; }
        Peer = reader.Read<MyTelegram.Schema.IInputPeer>();
        Id = reader.ReadInt32();
        if (Flags[0]) { Reaction = reader.Read<MyTelegram.Schema.IReaction>(); }
        if (Flags[1]) { Offset = reader.ReadString(); }
        Limit = reader.ReadInt32();
    }
}
