// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Stories;

///<summary>
/// The list of active (or active and hidden) <a href="https://corefork.telegram.org/api/stories#watching-stories">stories</a> has not changed.
/// See <a href="https://corefork.telegram.org/constructor/stories.allStoriesNotModified" />
///</summary>
[TlObject(0x1158fe3e)]
public sealed class TAllStoriesNotModified : IAllStories
{
    public uint ConstructorId => 0x1158fe3e;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// State to use to ask for updates
    ///</summary>
    public string State { get; set; }

    ///<summary>
    /// Current <a href="https://corefork.telegram.org/api/stories#stealth-mode">stealth mode</a> information
    /// See <a href="https://corefork.telegram.org/type/StoriesStealthMode" />
    ///</summary>
    public MyTelegram.Schema.IStoriesStealthMode StealthMode { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(State);
        writer.Write(StealthMode);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        State = reader.ReadString();
        StealthMode = reader.Read<MyTelegram.Schema.IStoriesStealthMode>();
    }
}