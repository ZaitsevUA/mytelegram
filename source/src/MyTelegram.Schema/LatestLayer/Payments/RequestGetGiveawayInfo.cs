// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Payments;

///<summary>
/// Obtain information about a <a href="https://corefork.telegram.org/api/giveaways">Telegram Premium giveaway »</a>.
/// <para>Possible errors</para>
/// Code Type Description
/// 400 PEER_ID_INVALID The provided peer id is invalid.
/// See <a href="https://corefork.telegram.org/method/payments.getGiveawayInfo" />
///</summary>
[TlObject(0xf4239425)]
public sealed class RequestGetGiveawayInfo : IRequest<MyTelegram.Schema.Payments.IGiveawayInfo>
{
    public uint ConstructorId => 0xf4239425;
    ///<summary>
    /// The peer where the giveaway was posted.
    /// See <a href="https://corefork.telegram.org/type/InputPeer" />
    ///</summary>
    public MyTelegram.Schema.IInputPeer Peer { get; set; }

    ///<summary>
    /// Message ID of the <a href="https://corefork.telegram.org/constructor/messageActionGiveawayLaunch">messageActionGiveawayLaunch</a> service message
    ///</summary>
    public int MsgId { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Peer);
        writer.Write(MsgId);
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Peer = reader.Read<MyTelegram.Schema.IInputPeer>();
        MsgId = reader.ReadInt32();
    }
}
