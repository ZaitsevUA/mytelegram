// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Payments;

///<summary>
/// A <a href="https://corefork.telegram.org/api/giveaways">giveaway</a> has ended.
/// See <a href="https://corefork.telegram.org/constructor/payments.giveawayInfoResults" />
///</summary>
[TlObject(0xe175e66f)]
public sealed class TGiveawayInfoResults : IGiveawayInfo
{
    public uint ConstructorId => 0xe175e66f;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public BitArray Flags { get; set; } = new BitArray(32);

    ///<summary>
    /// Whether we're one of the winners of this giveaway.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Winner { get; set; }

    ///<summary>
    /// Whether the giveaway was canceled and was fully refunded.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Refunded { get; set; }

    ///<summary>
    /// Start date of the giveaway
    ///</summary>
    public int StartDate { get; set; }

    ///<summary>
    /// If we're one of the winners of this giveaway, contains the <a href="https://corefork.telegram.org/api/links#premium-giftcode-links">Premium gift code</a>, see <a href="https://corefork.telegram.org/api/giveaways">here »</a> for more info on the full giveaway flow.
    ///</summary>
    public string? GiftCodeSlug { get; set; }

    ///<summary>
    /// If we're one of the winners of this <a href="https://corefork.telegram.org/api/giveaways#star-giveaways">Telegram Star giveaway</a>, the number <a href="https://corefork.telegram.org/api/stars">Telegram Stars</a> we won.
    ///</summary>
    public long? StarsPrize { get; set; }

    ///<summary>
    /// End date of the giveaway. May be bigger than the end date specified in parameters of the giveaway.
    ///</summary>
    public int FinishDate { get; set; }

    ///<summary>
    /// Number of winners in the giveaway
    ///</summary>
    public int WinnersCount { get; set; }

    ///<summary>
    /// Number of winners, which activated their <a href="https://corefork.telegram.org/api/links#premium-giftcode-links">gift codes</a>.
    ///</summary>
    public int? ActivatedCount { get; set; }

    public void ComputeFlag()
    {
        if (Winner) { Flags[0] = true; }
        if (Refunded) { Flags[1] = true; }
        if (GiftCodeSlug != null) { Flags[3] = true; }
        if (/*StarsPrize != 0 &&*/ StarsPrize.HasValue) { Flags[4] = true; }
        if (/*ActivatedCount != 0 && */ActivatedCount.HasValue) { Flags[2] = true; }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(StartDate);
        if (Flags[3]) { writer.Write(GiftCodeSlug); }
        if (Flags[4]) { writer.Write(StarsPrize.Value); }
        writer.Write(FinishDate);
        writer.Write(WinnersCount);
        if (Flags[2]) { writer.Write(ActivatedCount.Value); }
    }

    public void Deserialize(ref SequenceReader<byte> reader)
    {
        Flags = reader.ReadBitArray();
        if (Flags[0]) { Winner = true; }
        if (Flags[1]) { Refunded = true; }
        StartDate = reader.ReadInt32();
        if (Flags[3]) { GiftCodeSlug = reader.ReadString(); }
        if (Flags[4]) { StarsPrize = reader.ReadInt64(); }
        FinishDate = reader.ReadInt32();
        WinnersCount = reader.ReadInt32();
        if (Flags[2]) { ActivatedCount = reader.ReadInt32(); }
    }
}